{
    "root": true,
    "env": {
        "browser": true
    },
    "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "prettier",
        "prettier/@typescript-eslint"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "eslint-plugin-jsdoc",
        "eslint-plugin-prefer-arrow",
        "eslint-plugin-react",
        "@typescript-eslint"
    ],
    "globals": {
        "React": true
    },
    "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": [
            "error",
            {
                "default": "array"
            }
        ],
        "@typescript-eslint/ban-types": [
            "error",
            {
                "types": {
                    "Object": {
                        "message": "Avoid using the `Object` type. Did you mean `object`?"
                    },
                    "Function": {
                        "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
                    },
                    "Boolean": {
                        "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
                    },
                    "Number": {
                        "message": "Avoid using the `Number` type. Did you mean `number`?"
                    },
                    "String": {
                        "message": "Avoid using the `String` type. Did you mean `string`?"
                    },
                    "Symbol": {
                        "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
                    }
                }
            }
        ],
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/indent": "error",
        "@typescript-eslint/member-delimiter-style": [
            "off",
            {
                "multiline": {
                    "delimiter": "none",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "function",
                "format": ["PascalCase", "camelCase"]
            }
        ],
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": [ "error", "single" ],
        "@typescript-eslint/semi": [ "error", "always" ],
        "@typescript-eslint/triple-slash-reference": [
            "error",
            {
                "path": "always",
                "types": "prefer-import",
                "lib": "always"
            }
        ],
        "@typescript-eslint/type-annotation-spacing": "off",
        "@typescript-eslint/unified-signatures": "error",
        "arrow-parens": [
            "off",
            "always"
        ],
        "brace-style": [
            "off",
            "off"
        ],
        "complexity": "off",
        "constructor-super": "error",
        "guard-for-in": "error",
        "id-blacklist": [
            "error",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
        ],
        "id-match": "error",
        "jsdoc/check-alignment": "error",
        "jsdoc/check-indentation": "error",
        "jsdoc/newline-after-description": "error",
        "max-classes-per-file": [
            "error",
            1
        ],
        "new-parens": "off",
        "newline-per-chained-call": "off",
        "no-cond-assign": "error",
        "no-console": "error",
        "no-debugger": "error",
        "no-empty": "error",
        "no-eval": "error",
        "no-extra-semi": "error",
        "no-fallthrough": "off",
        "no-invalid-this": "off",
        "no-irregular-whitespace": "error",
        "no-new-wrappers": "error",
        "no-shadow": [
            "error",
            {
                "hoist": "all"
            }
        ],
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "error",
        "no-unsafe-finally": "error",
        "no-unused-labels": "error",
        "prefer-arrow/prefer-arrow-functions": "error",
        "prefer-const": "error",
        "radix": "error",
        "react/jsx-equals-spacing": "off",
        "react/jsx-wrap-multilines": "off",
        "space-before-function-paren": "off",
        "spaced-comment": [
            "error",
            "always",
            {
                "markers": [
                    "/"
                ]
            }
        ],
        "use-isnan": "error",
        "valid-typeof": "off",
        "array-bracket-spacing": [
          "error",
          "always",
          {
            "objectsInArrays": false
          }
        ],
        "comma-dangle": 2,
        "comma-spacing": [
          2,
          {
            "after": true
          }
        ],
        "comma-style": 2,
        "camelcase": 2,
        "curly": [
          "error",
          "all"
        ],
        "dot-notation": 2,
        "eol-last": 2,
        "eqeqeq": 2,
        "func-names": [
          "error",
          "never"
        ],
        "indent": [
          "error",
          4,
          {
            "SwitchCase": 1,
            "MemberExpression": 0,
            "ImportDeclaration": 1,
            "ObjectExpression": 1
          }
        ],
        "react/jsx-curly-spacing": [
          "error",
          "always"
        ],
        "key-spacing": 2,
        "keyword-spacing": 2,
        "linebreak-style": [
          "error",
          "unix"
        ],
        "max-len": [
          2,
          150
        ],
        "new-cap": 2,
        "no-bitwise": 2,
        "no-caller": 2,
        "no-mixed-spaces-and-tabs": 2,
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1
          }
        ],
        "no-trailing-spaces": 2,
        "no-undef": 2,
        "no-unused-vars": 2,
        "no-var": 2,
        "no-with": 2,
        "object-shorthand": 2,
        "object-curly-spacing": [
          "error",
          "always",
          {
            "objectsInObjects": false,
            "arraysInObjects": false
          }
        ],
        "one-var": [
          "error",
          "never"
        ],
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": "block-like",
            "next": "*"
          }
        ],
        "quote-props": [
          "error",
          "as-needed"
        ],
        "space-before-blocks": 2,
        "space-in-parens": 2,
        "space-infix-ops": 2,
        "space-unary-ops": [
          "error",
          {
            "words": false,
            "nonwords": false
          }
        ],
        "vars-on-top": 2,
        "wrap-iife": 2,
        "yoda": [
          "error",
          "never"
      ]
    }
}
